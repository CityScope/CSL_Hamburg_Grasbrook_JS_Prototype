{"version":3,"sources":["Provider.js","redux/actions.js","redux/initialState.js","redux/reducer.js","redux/store.js","services/consoleStyle.js","services/cityIO.js","components/MenuContainer/EditMenu/EditMenu.js","components/MenuContainer/TogglesMenu/styles.js","components/MenuContainer/TogglesMenu/ABMSubmenu/styles.js","components/MenuContainer/TogglesMenu/ABMSubmenu/index.js","components/MenuContainer/TogglesMenu/AccessSubmenu/index.js","components/MenuContainer/TogglesMenu/index.js","components/MenuContainer/FABMenu/styles.js","components/MenuContainer/FABMenu/index.js","components/MenuContainer/MenuContainer.js","components/baseMap/baseMapComponents.js","components/baseMap/baseMapUtils.js","components/baseMap/baseMap.js","components/prjMap/util.ts","components/prjMap/anchor.tsx","components/prjMap/deleteLocalStorage.js","components/prjMap/layer.tsx","components/baseMap/baseMapContainer.js","components/visContainer/Radar/Radar.js","components/visContainer/DownloadRawData/DownloadRawData.js","components/visContainer/BarChart/BarChart.js","services/utils.js","components/visContainer/AreaCalc/AreaCalc.js","components/visContainer/visContainer.js","components/LoadingSpinner/index.js","components/Screen/index.js","App.js","index.js"],"names":["ProviderWrapper","children","store","listenToSlidersEvents","data","type","listenToEditMenu","listOfToggles","Object","keys","settings","menu","toggles","menuInitState","i","length","values","showOnInit","push","initialState","MENU","CITYIO","MAP","SLIDERS","time","map","layers","ABM","startSimHour","endSimHour","speed","animationSpeed","ACCESS_TOGGLE","SELECTED_TYPE","height","color","name","READY","LOADING","reducer","state","action","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","createStore","newDataStyle","join","errorStyle","loadingStyle","CityIO","props","handleURL","tableName","cityioURL","cityIO","mockURL","baseURL","getCityIOHash","timer","setInterval","_isMounted","interval","console","log","URL","axios","get","then","response","handleCityIOHashes","catch","e","result","id","oldHashs","setState","cityIOmodulesStatus","setLoadingState","cityIOmodules","forEach","module","hashes","setNestedState","getCityIOmoduleData","parent","child","holder","moduleName","checkDoneCityIO","error","status","headers","request","message","config","cityIOmodulesData","getCityioData","setReadyState","this","Component","mapDispatchToProps","connect","cityioData","muiTheme","createMuiTheme","overrides","MuiSlider","thumb","track","rail","markActive","markLabelActive","markLabel","classes","makeStyles","theme","drawer","background","width","zIndex","listItemPrimaryText","listItemSecondaryText","fontSize","list","dividerColor","backgroundColor","useStyles","React","useState","selectedIndex","setSelectedIndex","dispatch","useDispatch","selectedType","useSelector","marks","value","label","Drawer","className","variant","anchor","open","paper","List","LanduseTypesList","iconsArr","use","col","rgbCol","selected","LBCS","lbcs","ThemeProvider","Divider","key","Math","random","component","root","ListItem","alignItems","button","onClick","event","typeProps","ListItemAvatar","Avatar","style","charAt","ListItemText","primary","secondary","Fragment","Collapse","in","Box","m","Slider","valueLabelDisplay","onChangeCommitted","getAriaLabel","index","toString","min","max","createTypesIcons","GEOGRID","properties","types","display","paddingLeft","paddingRight","text","marginLeft","marginTop","flexGrow","marginBottom","fontWeight","ColoredSwitch","withStyles","switchBase","checked","Switch","subtitle1","subtitle2","ABMSubmenu","sliders","Typography","gutterBottom","onChange","newValue","aria-labelledby","AccessSubmenu","accessToggle","ACCESS_PROPERTIES","access","p","textTransform","ListItemSecondaryAction","edge","TogglesMenu","toggleDrawer","handleToggle","menuState","togglesMeta","togglesCompsArray","loadedModules","requireModule","includes","thisToggle","displayName","BackdropProps","invisible","onClose","flexDirection","position","paddingTop","menuButton","editButton","resetViewButton","templatesButton","FABMenu","Fab","MenuContainer","drawerOpen","indexOf","updatedMenuState","splice","showEditMenu","SelectionTarget","mousePos","divSize","rc","colorTrans","mouseX","clientX","mouseY","clientY","border","mouseDown","borderColor","borderRadius","pointerEvents","left","top","CellMeta","padding","hoveredObj","object","tzlookup","require","_proccessGridData","typesSettings","TUIgridData","grid","GEOGRIDDATA","features","interactive","geoGridMapping","geogrid_to_tui_mapping","counter","thisCellMapping","gridCellType","interactiveCellProps","cellValueByIndex","JSON","parse","stringify","_proccesNetworkPnts","metaGrid","networkGeojson","gridRows","header","nrows","gridCols","ncols","cell","pnt","land_use","netWidth","gridPosition","geometry","coordinates","_proccessGridTextData","textData","_proccessAccessData","accessData","d","heatmap","_postMapEditsToCityIO","endPoint","options","method","url","Accept","_proccessBresenhamGrid","bresenhamGrid","row","pntLatLong","Map","_onViewStateChange","viewState","orthographic","_mulipleObjPicked","dim","pickingRadius","x","y","deckGL","pickObjects","_handleGridcellEditing","multiSelectedObj","thisCellProps","old_height","old_color","selectedCellsState","_handleNetworkHover","pntProps","old_netWidth","hoveredPnt","_handleNetworkRemove","path","networkLayer","item","tmpObj","_handleNetworkCreate","networkFirstPoint","pickData","pickObject","class","tmpArr","FP","SP","bresenhamLine","x0","y0","x1","y1","xWalker","yWalker","deltaX","deltaY","absDeltaX","absDeltaY","errX","errY","xDestination","yDestination","step","_pushTobresenhamLine","posString","pathArr","abs","_bresenhamLine","Array","isArray","_renderSelectionTarget","_handleKeyUp","keyDownState","_handleKeyDown","nativeEvent","_remapValues","draggingWhileEditing","selectedNetState","initialViewState","networkEdge","animationFrame","timeZoneOffset","hourAtLatLong","Date","toLocaleString","timeZone","latitude","longitude","hour","hour12","getUTCHours","parseInt","setDirLightSettings","dirLightSettings","timestamp","UTC","intensity","_shadow","cancelAnimationFrame","_rightClickViewRotate","_setupEffects","_setViewStateToTableHeader","networkPnts","gridTextData","GEONETWORK","_animate","prevProps","prevState","animateABM","animateCamera","_effects","shadowColor","dataProps","pitch","zoom","bearing","rotation","ambientLight","AmbientLight","dirLight","_SunLight","lightingEffect","LightingEffect","startHour","endHour","t","currentDateMidnight","setHours","date","getTime","directionalLights","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","requestAnimationFrame","bind","document","getElementById","addEventListener","evt","preventDefault","zoomLevel","TextLayer","getText","getPosition","getColor","getSize","GeoJsonLayer","visible","pickable","extruded","lineWidthScale","lineWidthMinPixels","getElevation","getFillColor","onHover","onDrag","onDragStart","onDragEnd","updateTriggers","transitions","ScatterplotLayer","opacity","filled","radiusScale","radiusMinPixels","radiusMaxPixels","getRadius","PathLayer","widthScale","widthMinPixels","getPath","getWidth","HeatmapLayer","colorRange","colors","radiusPixels","getWeight","TripsLayer","getTimestamps","timestamps","mode","rounded","trailLength","currentTime","noisePath","onKeyDown","onKeyUp","onMouseMove","onMouseUp","onMouseDown","getCursor","ref","deck","onViewStateChange","_renderLayers","effects","controller","touchZoom","touchRotate","dragPan","dragRotate","keyboard","asyncRender","reuseMaps","mapboxApiAccessToken","process","mapStyle","blue","preventStyleDiffing","solve","transformPointsToMatrix","sourcePoints","targetPoints","a","b","n","fromX","fromY","toX","toY","h","num","precision","factor","pow","tempNumber","round","matrixToTransform","matrix","vectorToTransform","vector","styles","container","cursor","anchorSize","bottom","right","AnchorComponent","translation","onMouseEnter","transform","margin","spacing","DeleteLocalStorage","Grid","justify","Button","startIcon","anchors","defaultMatrix","_setDeltaVal","deltaInitVals","Layer","layerTranslateDelta","anchorTranslateDelta","isAnchorDragging","anchorMoving","translateDelta","undefined","transformOrigin","containerTranslate","onAnchorMouseDown","stopPropagation","pageX","pageY","onAnchorMouseMove","vectorIndexToModify","onAnchorMouseUp","isEditMode","newVector","_clearLocalStraoge","localStorage","getItem","removeItem","location","reload","getBoundingClientRect","ls","setItem","removeEventListener","anchorStyle","anchorClassName","MapContainer","_checkKeystone","maxWidth","overflow","Radar","domains","radarData","radarSize","indicators","viz_type","domain","generateData","animation","polygons","fillOpacity","strokeWidth","axes","fill","labels","textAnchor","stroke","tickValues","v","DownloadRawData","element","createElement","file","Blob","href","createObjectURL","download","body","appendChild","click","downloadTxtFile","size","title","barChartData","dataArr","xType","stackBy","yDomain","tickLabelAngle","componentToHex","c","hex","AreaCalc","hoveredNode","setHoveredNode","cellSize","geoGridData","calcAreaObj","gridCellData","r","g","typeName","hasOwnProperty","count","area","radialData","k","calcArea","onLeafMouseOver","onLeafMouseOut","colorType","getLabel","showRadar","BarChart","override","css","LoadingSpinner","loading","Screen","ready","MapRoute","pre","cityscopePrjName","substring","table","Provider","StylesProvider","injectFirst","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.05829878.chunk.js","sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nconst ProviderWrapper = ({ children, store }) => (\n    <Provider store={store}>{children}</Provider>\n);\n\nexport default ProviderWrapper;\n","/**\n * ACTIONS\n */\nexport const GET_CITYIO_DATA = \"GET_CITYIO_DATA\";\nexport function getCityioData(data) {\n    return { type: GET_CITYIO_DATA, data };\n}\n\nexport const LISTEN_TO_MAP_EVENTS = \"LISTEN_TO_MAP_EVENTS\";\nexport function listenToMapEvents(data) {\n    return { type: LISTEN_TO_MAP_EVENTS, data };\n}\n\nexport const LISTEN_TO_ABM_SLIDERS = \"LISTEN_TO_ABM_SLIDERS\";\nexport function listenToSlidersEvents(data) {\n    return { type: LISTEN_TO_ABM_SLIDERS, data };\n}\n\nexport const LISTEN_TO_ACCESS_TOGGLE = \"LISTEN_TO_ACCESS_TOGGLE\";\nexport function listenToAccessToggle(data) {\n    return { type: LISTEN_TO_ACCESS_TOGGLE, data };\n}\n\nexport const MENU_INTERACTION = \"MENU_INTERACTION\";\n\nexport function listenToMenuUI(data) {\n    return { type: MENU_INTERACTION, data };\n}\n\nexport const LISTEN_TO_EDIT_MENU = \"LISTEN_TO_EDIT_MENU\";\nexport function listenToEditMenu(data) {\n    return { type: LISTEN_TO_EDIT_MENU, data };\n}\n\nexport const SET_READY_STATE = \"SET_READY_STATE\";\nexport function setReadyState(data) {\n    return { type: SET_READY_STATE, data };\n}\n\nexport const SET_LOADING_STATE = \"SET_LOADING_STATE\";\nexport function setLoadingState(data) {\n    return { type: SET_LOADING_STATE, data };\n}\n","import settings from \"../settings/settings.json\";\n\n/**\n * ! INIT STATE\n */\nconst listOfToggles = Object.keys(settings.menu.toggles);\nlet menuInitState = [];\nfor (let i = 0; i < listOfToggles.length; i++) {\n    if (Object.values(settings.menu.toggles)[i].showOnInit) {\n        menuInitState.push(listOfToggles[i]);\n    }\n}\n\nconst initialState = {\n    MENU: menuInitState,\n    CITYIO: {},\n    MAP: {},\n    SLIDERS: {\n        time: [\n            settings.map.layers.ABM.startSimHour,\n            settings.map.layers.ABM.startSimHour,\n            settings.map.layers.ABM.endSimHour\n        ],\n        speed: settings.map.layers.ABM.animationSpeed\n    },\n    ACCESS_TOGGLE: 0,\n    SELECTED_TYPE: {\n        height: 0,\n        color: [255, 0, 0, 200],\n        name: \"Select Land-Use!\"\n    },\n    READY: false,\n    LOADING: false\n};\n\nexport default initialState;\n","import {\n    GET_CITYIO_DATA,\n    MENU_INTERACTION,\n    LISTEN_TO_MAP_EVENTS,\n    LISTEN_TO_ABM_SLIDERS,\n    LISTEN_TO_EDIT_MENU,\n    SET_READY_STATE,\n    SET_LOADING_STATE,\n    LISTEN_TO_ACCESS_TOGGLE\n} from \"./actions\";\nimport initialState from \"./initialState\";\n\n/**\n * REDUCER\n */\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_CITYIO_DATA:\n            return { ...state, CITYIO: action.data };\n        case MENU_INTERACTION:\n            return { ...state, MENU: action.data };\n        case LISTEN_TO_MAP_EVENTS:\n            return { ...state, MAP: action.data };\n        case LISTEN_TO_ABM_SLIDERS:\n            return { ...state, SLIDERS: action.data };\n        case LISTEN_TO_ACCESS_TOGGLE:\n            return { ...state, ACCESS_TOGGLE: action.data };\n        case LISTEN_TO_EDIT_MENU:\n            return { ...state, SELECTED_TYPE: action.data };\n        case SET_READY_STATE:\n            return { ...state, READY: action.data };\n        case SET_LOADING_STATE:\n            return { ...state, LOADING: action.data };\n        default:\n            return state;\n    }\n}\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst reduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst configureStore = () => {\n    const store = createStore(reducer, reduxDevTools);\n\n    if (process.env.NODE_ENV !== \"production\") {\n        if (module.hot) {\n            module.hot.accept(\"./reducer\", () => {\n                store.replaceReducer(reducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","export const newDataStyle = [\n    \"background: linear-gradient(#10B500, #0086B5)\",\n    \"border: 1px solid #ffffff\",\n    \"color: black\",\n    \"display: block\",\n    \"line-height: 20px\",\n    \"text-align: center\",\n    \"font-weight: bold\",\n].join(\";\");\n\nexport const errorStyle = [\n    \"background: linear-gradient(#00FF04 ,#FF00E0 )\",\n    \"border: 1px solid #ffffff\",\n    \"color: black\",\n    \"display: block\",\n    \"line-height: 20px\",\n    \"text-align: center\",\n    \"font-weight: bold\",\n].join(\";\");\n\nexport const loadingStyle = [\n    \"background: linear-gradient(#FF0000 ,#FF8633 )\",\n    \"border: 1px solid #ffffff\",\n    \"color: black\",\n    \"display: block\",\n    \"line-height: 20px\",\n    \"text-align: center\",\n    \"font-weight: bold\",\n].join(\";\");\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n    getCityioData,\n    setReadyState,\n    setLoadingState,\n} from \"../redux/actions\";\nimport settings from \"../settings/settings.json\";\nimport { loadingStyle, errorStyle } from \"../services/consoleStyle\";\n\nclass CityIO extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            oldHashs: {},\n            cityIOmodulesData: {},\n        };\n        this.cityioURL = null;\n    }\n\n    /**\n     * start fetching API hashes to check for new data\n     */\n    componentDidMount() {\n        this._isMounted = true;\n        this.handleURL();\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    handleURL = () => {\n        if (this.props.tableName === \"mockAPI\") {\n            this.cityioURL = settings.cityIO.mockURL;\n        } else {\n            this.cityioURL = settings.cityIO.baseURL + this.props.tableName;\n        }\n\n        // get the hashes first\n        this.getCityIOHash(this.cityioURL + \"/meta\");\n        // and every interval\n        this.timer = setInterval(() => {\n            if (this._isMounted) {\n                this.getCityIOHash(this.cityioURL + \"/meta\");\n            }\n        }, settings.cityIO.interval);\n        console.log(\n            \"%c starting cityIO GET interval every \" +\n                settings.cityIO.interval +\n                \"ms \",\n            loadingStyle\n        );\n    };\n\n    /**\n     * returns only the hasees from API\n     */\n    getCityIOHash = (URL) => {\n        axios\n            .get(URL)\n            .then((response) => {\n                this.handleCityIOHashes(response.data);\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    };\n\n    /**\n     * check for updated hashes.\n     * if new hashes exist,\n     * fetch !! WHOLE API (for now)\n     */\n    handleCityIOHashes = (result) => {\n        // if master hash ID has changed (cityIO table state)\n        if (result.id !== this.state.oldHashs.id) {\n            // reset the cityIOmodulesStatus\n            this.setState({ cityIOmodulesStatus: {} });\n\n            // reset the state of this flag\n            this.props.setLoadingState(true);\n\n            // new data in table, get all modules\n            // that are listed in settings\n            settings.cityIO.cityIOmodules.forEach((module) => {\n                // only update modules that have new data\n                if (result.hashes[module] !== this.state.oldHashs[module]) {\n                    // set this module as not ready\n                    this.setNestedState(\"cityIOmodulesStatus\", module, false);\n                    // get the module data from cityIO\n                    this.getCityIOmoduleData(\n                        module,\n                        this.cityioURL + \"/\" + module\n                    );\n                    // update this new module hash in state\n                    this.setNestedState(\n                        \"oldHashs\",\n                        module,\n                        result.hashes[module]\n                    );\n                } else {\n                    // update module name with ok\n                    this.setNestedState(\"cityIOmodulesStatus\", module, true);\n                }\n            });\n            // finally, put to state the hashes master id\n            this.setNestedState(\"oldHashs\", \"id\", result.id);\n        }\n    };\n\n    /**\n     *\n     * Helper function to set nested state\n     */\n\n    setNestedState = (parent, child, data) => {\n        var holder = { ...this.state[parent] };\n        holder[child] = data;\n        this.setState({ [parent]: holder });\n    };\n\n    /**\n     * get each module data\n     */\n    getCityIOmoduleData = (moduleName, URL) => {\n        axios\n            .get(URL)\n            .then((response) => {\n                // put response to state obj\n                this.setNestedState(\n                    \"cityIOmodulesData\",\n                    moduleName,\n                    response.data\n                );\n                console.log(\"...updating module:\", moduleName);\n                this.checkDoneCityIO(moduleName);\n            })\n\n            .catch((error) => {\n                if (error.response) {\n                    console.log(\n                        \"error.response:\",\n                        \"\\n\",\n                        error.response.data,\n                        \"\\n\",\n                        error.response.status,\n                        \"\\n\",\n                        error.response.headers\n                    );\n                } else if (error.request) {\n                    console.log(\"error.request:\", error.request);\n                } else {\n                    console.log(\"misc error:\", error.message);\n                }\n                console.log(\"request config:\", error.config);\n            });\n    };\n\n    checkDoneCityIO = (moduleName) => {\n        this.setNestedState(\"cityIOmodulesStatus\", moduleName, true);\n\n        // check if all modules are done\n        for (const status in this.state.cityIOmodulesStatus) {\n            if (this.state.cityIOmodulesStatus[status] !== true) {\n                // we still need to update some module, stop\n                return;\n            }\n        }\n        //  if so, share the data with the app\n        const data = this.state.cityIOmodulesData;\n        data.tableName = this.props.tableName;\n        // finally, send data to redux\n        this.props.getCityioData(data);\n        console.log(\"%c done updating from cityIO\", errorStyle);\n\n        // initializes rendering of Menu and Map containers\n        this.props.setReadyState(true);\n        this.props.setLoadingState(false);\n    };\n\n    render() {\n        return null;\n    }\n}\n\nconst mapDispatchToProps = {\n    getCityioData: getCityioData,\n    setReadyState: setReadyState,\n    setLoadingState: setLoadingState,\n};\n\nexport default connect(null, mapDispatchToProps)(CityIO);\n","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport List from \"@material-ui/core/List\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { listenToEditMenu } from \"../../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nfunction EditMenu(props) {\n    const muiTheme = createMuiTheme({\n        overrides: {\n            MuiSlider: {\n                thumb: {\n                    color: \"#FFF5\",\n                },\n                track: {\n                    color: \"white\",\n                },\n                rail: {\n                    color: \"white\",\n                },\n\n                markActive: {\n                    color: \"white\",\n                },\n                markLabelActive: {\n                    color: \"white\",\n                },\n                markLabel: {\n                    color: \"white\",\n                },\n            },\n        },\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        drawer: {\n            background: \"#1D1F21\",\n            width: 300,\n\n            zIndex: theme.zIndex.drawer + 1,\n        },\n        listItemPrimaryText: {\n            color: \"#FFF\",\n        },\n        listItemSecondaryText: {\n            color: \"#999\",\n            fontSize: \"0.7em\",\n        },\n        list: {\n            color: \"#999\",\n        },\n\n        dividerColor: {\n            backgroundColor: \"#484848\",\n        },\n    }));\n\n    const classes = useStyles();\n    const [selectedIndex, setSelectedIndex] = React.useState(null);\n    const dispatch = useDispatch();\n    const selectedType = useSelector((state) => state.SELECTED_TYPE);\n    const { height } = selectedType;\n    const marks = [\n        { value: 0, label: \"0 floors\" },\n        { value: 50, label: \"50 floors\" },\n    ];\n\n    const handleListItemClick = (event, name, typeProps) => {\n        // ! injects the type name into the attributes themselves\n        typeProps.name = name;\n        setSelectedIndex(name);\n        dispatch(listenToEditMenu(typeProps));\n    };\n\n    // create the types themselves\n    const createTypesIcons = (LanduseTypesList) => {\n        let iconsArr = [];\n        Object.keys(LanduseTypesList).forEach((type) => {\n            let col = LanduseTypesList[type].color;\n            let rgbCol = \"rgb(\" + col[0] + \",\" + col[1] + \",\" + col[2] + \")\";\n            const selected = selectedIndex === type;\n            let use;\n            LanduseTypesList[type].LBCS.forEach((lbcs) => {\n                use = Object.keys(lbcs.use)[0];\n            });\n\n            iconsArr.push(\n                <ThemeProvider theme={muiTheme}>\n                    <Divider\n                        key={Math.random()}\n                        variant=\"inset\"\n                        component=\"li\"\n                        classes={{ root: classes.dividerColor }}\n                    />\n\n                    <ListItem\n                        key={Math.random()}\n                        alignItems=\"flex-start\"\n                        button\n                        variant=\"raised\"\n                        selected={selected}\n                        onClick={(event) =>\n                            handleListItemClick(\n                                event,\n                                type,\n                                LanduseTypesList[type]\n                            )\n                        }\n                        className={classes.list}\n                    >\n                        <ListItemAvatar>\n                            <Avatar style={{ backgroundColor: rgbCol }}>\n                                {type.charAt(0)}\n                            </Avatar>\n                        </ListItemAvatar>\n\n                        <ListItemText\n                            classes={{\n                                primary: classes.listItemPrimaryText,\n                                secondary: classes.listItemSecondaryText,\n                            }}\n                            primary={type}\n                            secondary={\n                                <React.Fragment>\n                                    {\"LBCS: \" + use}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n\n                    <Collapse in={selected} key={Math.random()}>\n                        <Box m={2} width={0.8}>\n                            <Slider\n                                key={Math.random()}\n                                value={height}\n                                valueLabelDisplay=\"auto\"\n                                className={classes.list}\n                                onChangeCommitted={(event, value) =>\n                                    dispatch(\n                                        listenToEditMenu({\n                                            ...selectedType,\n                                            height: value,\n                                        })\n                                    )\n                                }\n                                getAriaLabel={(index) => index.toString()}\n                                min={0}\n                                max={50}\n                                marks={marks}\n                            ></Slider>\n                        </Box>\n                    </Collapse>\n                </ThemeProvider>\n            );\n        });\n        return iconsArr;\n    };\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"right\"\n            open={true}\n            classes={{\n                paper: classes.drawer,\n            }}\n        >\n            <List>\n                {createTypesIcons(props.cityioData.GEOGRID.properties.types)}\n            </List>\n        </Drawer>\n    );\n}\n\n// export default EditMenuMain;\n\nconst mapStateToProps = (state) => {\n    return {\n        cityioData: state.CITYIO,\n    };\n};\n\nexport default connect(mapStateToProps, null)(EditMenu);\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport const useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        paddingLeft: 16,\n        paddingRight: 16\n    },\n    paper: {\n        background: \"#1D1F21\"\n    },\n    list: {\n        width: \"23vw\",\n        color: \"#FFF\"\n    },\n    text: {\n        marginLeft: 16,\n        marginTop: 12,\n        flexGrow: 1,\n        fontSize: 20,\n        marginBottom: 12,\n        fontWeight: \"lighter\"\n    }\n});\n\nexport const ColoredSwitch = withStyles({\n    switchBase: {\n        \"&$checked + $track\": {\n            backgroundColor: \"#ff5278\"\n        }\n    },\n    checked: {},\n    track: {}\n})(Switch);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n    root: {\n        width: \"80%\",\n        marginLeft: 28\n    },\n    subtitle1: {\n        marginTop: 12\n    },\n    subtitle2: {\n        marginTop: 12\n    },\n    markLabel: {\n        color: \"white\"\n    }\n});\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listenToSlidersEvents } from \"../../../../redux/actions\";\n\nfunction ABMSubmenu() {\n    const classes = useStyles();\n\n    const sliders = useSelector(state => state.SLIDERS);\n\n    const dispatch = useDispatch();\n\n    const handleSetTimeValue = (e, newValue) => {\n        dispatch(\n            listenToSlidersEvents({\n                ...sliders,\n                time: newValue\n            })\n        );\n    };\n\n    const handleSetSpeedValue = (e, newValue) => {\n        dispatch(\n            listenToSlidersEvents({\n                ...sliders,\n                speed: newValue\n            })\n        );\n    };\n\n    const marks = [\n        {\n            value: 0,\n            label: \"12AM\"\n        },\n        {\n            value: 21600,\n            label: \"6AM\"\n        },\n        {\n            value: 43200,\n            label: \"12PM\"\n        },\n        {\n            value: 64800,\n            label: \"6PM\"\n        },\n        {\n            value: 86400,\n            label: \"12AM\"\n        }\n    ];\n\n    return (\n        <div className={classes.root}>\n            <Typography\n                className={classes.subtitle1}\n                variant=\"subtitle2\"\n                id=\"range-slider\"\n                gutterBottom\n            >\n                Simulation Range\n            </Typography>\n            <Slider\n                classes={{\n                    markLabel: classes.markLabel\n                }}\n                min={0}\n                max={86400}\n                marks={marks}\n                value={sliders.time}\n                onChange={handleSetTimeValue}\n                valueLabelDisplay=\"off\"\n                aria-labelledby=\"range-slider\"\n            />\n            <Typography\n                className={classes.subtitle2}\n                variant=\"subtitle2\"\n                id=\"continuous-slider\"\n                gutterBottom\n            >\n                Simulation Speed\n            </Typography>\n            <Slider\n                min={0}\n                max={100}\n                value={sliders.speed}\n                onChange={handleSetSpeedValue}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"continuous-slider\"\n            />\n        </div>\n    );\n}\n\nexport default ABMSubmenu;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { ColoredSwitch } from \"../styles\";\nimport { listenToAccessToggle } from \"../../../../redux/actions\";\n\nfunction AccessSubmenu(props) {\n    const accessToggle = useSelector(state => state.ACCESS_TOGGLE);\n\n    const { cityioData } = props;\n\n    const ACCESS_PROPERTIES =\n        cityioData && cityioData.access && cityioData.access.properties\n            ? cityioData.access.properties\n            : [];\n\n    const dispatch = useDispatch();\n\n    return (\n        <List>\n            {ACCESS_PROPERTIES.map((p, i) => (\n                <ListItem key={p}>\n                    <ListItemText\n                        primary={p}\n                        style={{ textTransform: \"capitalize\" }}\n                    />\n                    <ListItemSecondaryAction>\n                        <ColoredSwitch\n                            edge=\"end\"\n                            checked={accessToggle === i}\n                            onChange={() => {\n                                dispatch(listenToAccessToggle(i));\n                            }}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    );\n}\n\nexport default AccessSubmenu;\n","import React from \"react\";\nimport { useStyles, ColoredSwitch } from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport settings from \"../../../settings/settings.json\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ABMSubmenu from \"./ABMSubmenu\";\nimport AccessSubmenu from \"./AccessSubmenu\";\n\nfunction TogglesMenu(props) {\n    const classes = useStyles();\n    const { open, toggleDrawer, handleToggle } = props;\n\n    const { menuState, cityioData } = useSelector((state) => ({\n        menuState: state.MENU,\n        cityioData: state.CITYIO,\n    }));\n\n    const togglesMeta = settings.menu.toggles;\n    const listOfToggles = Object.keys(togglesMeta);\n\n    /**\n     * gets props with initial menu state\n     * and turn on the layer on init\n     */\n    let togglesCompsArray = [];\n    // array of loaded API modules\n    const loadedModules = Object.keys(cityioData);\n    // create each toggle\n    for (let i = 0; i < listOfToggles.length; i++) {\n        // check if the mdoule of this toggle\n        // was loaded on the API\n        let requireModule = togglesMeta[listOfToggles[i]].requireModule;\n\n        const checked = menuState.includes(listOfToggles[i]) ? true : false;\n\n        if (loadedModules.includes(requireModule) || requireModule === false) {\n            const thisToggle = (\n                <div key={listOfToggles[i]}>\n                    <ListItem>\n                        <ListItemText\n                            primary={togglesMeta[listOfToggles[i]].displayName}\n                        />\n                        <ListItemSecondaryAction>\n                            <ColoredSwitch\n                                edge=\"end\"\n                                onChange={handleToggle(listOfToggles[i])}\n                                checked={checked}\n                            />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    {listOfToggles[i] === \"ABM\" && (\n                        <Collapse in={checked} style={{ width: \"100%\" }}>\n                            <ABMSubmenu />\n                        </Collapse>\n                    )}\n                    {listOfToggles[i] === \"ACCESS\" && (\n                        <Collapse\n                            in={checked}\n                            style={{\n                                width: \"80%\",\n                                marginLeft: 24,\n                            }}\n                        >\n                            <AccessSubmenu cityioData={cityioData} />\n                        </Collapse>\n                    )}\n                </div>\n            );\n            togglesCompsArray.push(thisToggle);\n        }\n    }\n\n    return (\n        <Drawer\n            className={classes.root}\n            BackdropProps={{\n                invisible: true,\n            }}\n            classes={{\n                paper: classes.paper,\n            }}\n            anchor=\"left\"\n            open={open}\n            onClose={toggleDrawer}\n        >\n            <List className={classes.list}>\n                <Typography variant=\"h5\" className={classes.text} gutterBottom>\n                    CityScopeJS\n                </Typography>\n                {togglesCompsArray}\n            </List>\n        </Drawer>\n    );\n}\n\nexport default TogglesMenu;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"fixed\",\n        paddingLeft: 16,\n        paddingTop: 8,\n        zIndex: 1\n    },\n    menuButton: {\n        marginTop: 8,\n        marginBottom: 8\n    },\n    editButton: {\n        marginTop: 8,\n        marginBottom: 8\n    },\n    resetViewButton: {\n        marginTop: 8,\n        marginBottom: 8\n    },\n    templatesButton: {\n        marginTop: 8,\n        marginBottom: 8\n    }\n});\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport Fab from \"@material-ui/core/Fab\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport NearMeIcon from \"@material-ui/icons/NearMe\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\n\nexport default function FABMenu(props) {\n    const classes = useStyles();\n\n    const menuState = useSelector((state) => state.MENU);\n    const { handleToggle, toggleDrawer } = props;\n\n    return (\n        <div className={classes.root}>\n            <Fab\n                className={classes.menuButton}\n                onClick={toggleDrawer}\n                style={{ backgroundColor: \"#1D1F21\" }}\n            >\n                <MenuIcon style={{ color: \"FFF\" }} />\n            </Fab>\n            <Fab\n                className={classes.editButton}\n                onClick={handleToggle(\"EDIT\")}\n                style={{ backgroundColor: \"#1D1F21\" }}\n            >\n                {menuState.includes(\"EDIT\") ? (\n                    <CancelIcon style={{ color: \"FFF\" }} />\n                ) : (\n                    <EditIcon style={{ color: \"FFF\" }} />\n                )}\n            </Fab>\n            <Fab\n                className={classes.resetViewButton}\n                onClick={handleToggle(\"RESET_VIEW\")}\n                style={{ backgroundColor: \"#1D1F21\" }}\n            >\n                {menuState.includes(\"RESET_VIEW\") ? (\n                    <NavigationIcon style={{ color: \"FFF\" }} />\n                ) : (\n                    <NearMeIcon style={{ color: \"FFF\" }} />\n                )}\n            </Fab>\n            <Fab\n                className={classes.templatesButton}\n                onClick={handleToggle(\"TEMPLATES\")}\n                style={{ backgroundColor: \"#1D1F21\" }}\n            >\n                <InsertDriveFileIcon style={{ color: \"FFF\" }} />\n            </Fab>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listenToMenuUI } from \"../../redux/actions\";\nimport EditMenu from \"./EditMenu/EditMenu\";\nimport TogglesMenu from \"./TogglesMenu\";\nimport FABMenu from \"./FABMenu\";\n\nfunction MenuContainer() {\n    const menuState = useSelector((state) => state.MENU);\n    const dispatch = useDispatch();\n\n    const [state, setState] = React.useState({\n        drawerOpen: false,\n    });\n\n    const toggleDrawer = () => {\n        setState({ ...state, drawerOpen: !state.drawerOpen });\n    };\n\n    const handleToggle = (value) => () => {\n        const i = menuState.indexOf(value);\n        const updatedMenuState = [...menuState];\n        if (i === -1) {\n            updatedMenuState.push(value);\n        } else {\n            updatedMenuState.splice(i, 1);\n        }\n\n        dispatch(listenToMenuUI(updatedMenuState));\n    };\n\n    const showEditMenu = menuState && menuState.includes(\"EDIT\");\n\n    return (\n        <div>\n            <TogglesMenu\n                open={state.drawerOpen}\n                toggleDrawer={toggleDrawer}\n                handleToggle={handleToggle}\n            />\n            <FABMenu toggleDrawer={toggleDrawer} handleToggle={handleToggle} />\n            {showEditMenu && <EditMenu key={\"EDIT\"} />}\n        </div>\n    );\n}\n\nexport default MenuContainer;\n","import React from \"react\";\n\n/**\n * cell selection\n * meta div\n * @param {*} props\n */\n\nexport const SelectionTarget = (props) => {\n    const selectedType = props.selectedType;\n    if (!props.mousePos) return null;\n    const mousePos = props.mousePos;\n\n    const divSize = props.divSize;\n    const rc = selectedType.color;\n    const color = \"rgb(\" + rc[0] + \",\" + rc[1] + \",\" + rc[2] + \")\";\n    const colorTrans = \"rgba(\" + rc[0] + \",\" + rc[1] + \",\" + rc[2] + \",0.6)\";\n    let mouseX = mousePos.clientX - divSize / 2;\n    let mouseY = mousePos.clientY - divSize / 2;\n    return (\n        <div\n            style={{\n                border: \"2px solid\",\n                backgroundColor: props.mouseDown ? colorTrans : \"rgba(0,0,0,0)\",\n                borderColor: color,\n                color: color,\n                borderRadius: \"15%\",\n                position: \"fixed\",\n                zIndex: 1,\n                pointerEvents: \"none\",\n                width: divSize,\n                height: divSize,\n                left: mouseX,\n                top: mouseY,\n            }}\n        >\n            <div\n                style={{\n                    position: \"relative\",\n                    left: divSize + 10,\n                    fontSize: \"0.5em\",\n                }}\n            >\n                {selectedType.name}\n            </div>\n        </div>\n    );\n};\n\n/**\n *\n * Cell meta comp\n */\n\nexport const CellMeta = (props) => {\n    if (!props.mousePos) return null;\n    const mousePos = props.mousePos;\n\n    return (\n        <div\n            style={{\n                borderRadius: \"15%\",\n                position: \"fixed\",\n                pointerEvents: \"none\",\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                padding: \"1vw\",\n                color: \"rgba(255,255,255,0.9)\",\n                zIndex: 1,\n                left: mousePos.clientX,\n                top: mousePos.clientY,\n                fontSize: \"0.65em\",\n                fontWeight: 500,\n            }}\n        >\n            <p>\n                Type:\n                {props.hoveredObj.object.properties.name}\n            </p>\n            <p>\n                Floors:\n                {props.hoveredObj.object.properties.height}\n            </p>\n            <p>\n                ID:\n                {props.hoveredObj.object.properties.id}\n            </p>\n        </div>\n    );\n};\n","import settings from \"../../settings/settings.json\";\nimport axios from \"axios\";\nimport { errorStyle } from \"../../services/consoleStyle\";\nvar tzlookup = require(\"tz-lookup\");\n\n/**\n * returns time for table location\n * for the light emlement\n * @param {*} header\n */\n\nexport const setDirLightSettings = (header) => {\n    // get the hour element of this location\n    let hourAtLatLong = new Date().toLocaleString(\"en-US\", {\n        timeZone: tzlookup(header.latitude, header.longitude),\n        hour: \"2-digit\",\n        hour12: false,\n    });\n\n    // get the time in greenwich\n    var greenwichDate = new Date();\n    var greenwichHours = greenwichDate.getUTCHours();\n    // calc the offset\n    let timeZoneOffset = greenwichHours + 24 - parseInt(hourAtLatLong);\n    return timeZoneOffset;\n};\n\n/**\n * Description. gets `props` with geojson\n * and procces the interactive area\n */\nexport const _proccessGridData = (cityioData) => {\n    let typesSettings = settings.map.types;\n    const TUIgridData = cityioData.grid;\n    const GEOGRID = cityioData.GEOGRID;\n    const GEOGRIDDATA = cityioData.GEOGRIDDATA;\n    // update GEOGRID features from GEOGRIDDATA on cityio\n    if (GEOGRIDDATA && GEOGRIDDATA.length > 0) {\n        for (let i = 0; i < GEOGRID.features.length; i++) {\n            GEOGRID.features[i].properties = GEOGRIDDATA[i];\n            GEOGRID.features[i].properties.id = i;\n        }\n        // for first init of gird\n        // when GEOPGRIDDATA was not yet created\n    } else {\n        // clreate empty grid\n        for (let i = 0; i < GEOGRID.features.length; i++) {\n            GEOGRID.features[i].properties.id = i;\n            // set no color for when no land use exist\n            GEOGRID.features[i].properties.color = [0, 0, 0, 0];\n            GEOGRID.features[i].properties.height = 0.1;\n            GEOGRID.features[i].properties.name = \"empty\";\n            GEOGRID.features[i].properties.interactive = true;\n        }\n    }\n\n    // handles TUI grid data on update\n    const geoGridMapping = cityioData.GEOGRID.properties.geogrid_to_tui_mapping;\n    let counter = 0;\n    for (let thisCellMapping in geoGridMapping) {\n        // type is the first value in the cell array\n        // the rotation is the 2nd\n        let gridCellType = TUIgridData[counter][0];\n        let interactiveCellProps = GEOGRID.features[thisCellMapping].properties;\n        // set up the cell type\n        interactiveCellProps.type = gridCellType;\n        // check if not undefined type (no scanning)\n        if (TUIgridData[counter][0] !== -1) {\n            // get value of cell from settings via its index\n            let cellValueByIndex = Object.values(typesSettings)[\n                TUIgridData[counter][0]\n            ];\n            // cast the cell color\n            interactiveCellProps.color = cellValueByIndex.color;\n            // cast the cell height\n            interactiveCellProps.height = cellValueByIndex.height;\n        } else {\n            console.log(\"... got null type...\");\n        }\n        counter = counter + 1;\n    }\n    const newGrid = JSON.parse(JSON.stringify(GEOGRID));\n    return newGrid;\n};\n\n/**\n * proccess grid data to geojson\n * of lineStrings\n * @param {cityIOdata} data\n * \n \nfeatures  :[\n    {\n        type: \"Feature\",\n        properties: {},\n        geometry: {\n            type: \"Point\",\n            coordinates: [125.6, 10.1]\n        },\n        properties: {\n            name: \"Dinagat Islands\"\n        }\n    }...\n]\n */\n\nexport const _proccesNetworkPnts = (cityioData) => {\n    const metaGrid = cityioData.GEOGRID.features;\n    // pnt object\n    const networkGeojson = {\n        type: \"FeatureCollection\",\n        features: [],\n    };\n\n    const gridRows = cityioData.GEOGRID.properties.header.nrows;\n    const gridCols = cityioData.GEOGRID.properties.header.ncols;\n\n    let counter = 0;\n\n    // create array for obstecles\n    // and array for coordinates\n    for (let cell = 0; cell < gridRows; cell++) {\n        for (var col = 0; col < gridCols; col++) {\n            let props;\n            const pntLatLong = metaGrid[counter].geometry.coordinates[0][0];\n            props = {\n                land_use: \"network\",\n                netWidth: 5,\n                color: [255, 255, 255, 150],\n                gridPosition: [col, cell],\n            };\n            const pnt = {\n                type: \"Feature\",\n                properties: props,\n                geometry: {\n                    type: \"Point\",\n                    coordinates: pntLatLong,\n                },\n            };\n            networkGeojson.features.push(pnt);\n            counter += 1;\n        }\n    }\n    return networkGeojson;\n};\n\n/**\n * Data format:\n * [\n *   {text: 'type', coordinates: [-122.466233, 37.684638]},\n *   ...\n * ]\n *\n * Grid data format:\n * features[i].geometry.coordinates[0][0]\n */\nexport const _proccessGridTextData = (cityioData) => {\n    const GEOGRID = cityioData.GEOGRID;\n    let textData = [];\n\n    const gridRows = cityioData.GEOGRID.properties.header.nrows;\n    const gridCols = cityioData.GEOGRID.properties.header.ncols;\n\n    let counter = 0;\n    for (let cell = 0; cell < gridRows; cell++) {\n        for (var col = 0; col < gridCols; col++) {\n            textData[counter] = {\n                text: [\n                    col,\n                    cell,\n                    // \" | \",\n                    // GEOGRID.features[counter].geometry.coordinates[0][0][0],\n                    // GEOGRID.features[counter].geometry.coordinates[0][0][1]\n                ].toString(),\n\n                // [col, cell].toString(),\n                coordinates: [\n                    GEOGRID.features[counter].geometry.coordinates[0][0][0],\n                    GEOGRID.features[counter].geometry.coordinates[0][0][1],\n                    GEOGRID.features[counter].properties.height + 10,\n                ],\n            };\n            counter += 1;\n        }\n    }\n    return textData;\n};\n\n/**\n * Description. gets `props` with geojson\n * and procces the access layer data\n */\nexport const _proccessAccessData = (data) => {\n    const accessData = data.access;\n    // get colors from settings\n    let coordinates = accessData.features.map((d) => d.geometry.coordinates);\n    let values = accessData.features.map((d) => d.properties);\n    let heatmap = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        heatmap.push({\n            coordinates: coordinates[i],\n            values: values[i],\n        });\n    }\n    return heatmap;\n};\n\n/**\n * checks if edits are done (toggled off)\n * than returns a redux state\n * with grid edits payload\n */\nexport const _postMapEditsToCityIO = (data, tableName, endPoint) => {\n    let postURL;\n    // check if cityIO or local server\n    postURL =\n        tableName === \"mockAPI\"\n            ? settings.cityIO.mockURL + endPoint\n            : \"https://cityio.media.mit.edu/api/table/update/\" +\n              tableName +\n              endPoint;\n\n    const options = {\n        method: \"post\",\n        url: postURL,\n        data: data,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        },\n    };\n    axios(options).catch((error) => {\n        console.log(\"%c\" + error, errorStyle);\n\n        console.log(\"ERROR:\", error);\n    });\n};\n\nexport const _proccessBresenhamGrid = (cityioData) => {\n    let bresenhamGrid = {};\n    const metaGrid = cityioData.GEOGRID.features;\n    const gridRows = cityioData.GEOGRID.properties.header.nrows;\n    const gridCols = cityioData.GEOGRID.properties.header.ncols;\n\n    let counter = 0;\n    for (let row = 0; row < gridRows; row++) {\n        for (var col = 0; col < gridCols; col++) {\n            const pntLatLong = metaGrid[counter].geometry.coordinates[0][0];\n            let posString = [col, row].toString();\n            bresenhamGrid[posString] = pntLatLong;\n            counter += 1;\n        }\n    }\n    return bresenhamGrid;\n};\n\n/**\n * https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm\n */\nexport const _bresenhamLine = (x0, y0, x1, y1, bresenhamGrid) => {\n    // search for latLong for this pixel\n    const _pushTobresenhamLine = (x, y) => {\n        let posString = [x, y].toString();\n        pathArr.push(bresenhamGrid[posString]);\n    };\n    let pathArr = [];\n    // Iterators, counters required by algorithm\n    let xWalker,\n        yWalker,\n        deltaX,\n        deltaY,\n        absDeltaX,\n        absDeltaY,\n        errX,\n        errY,\n        xDestination,\n        yDestination,\n        step;\n    // Calculate line deltas\n    deltaX = x1 - x0;\n    deltaY = y1 - y0;\n    // Create a positive copy of deltas (makes iterating easier)\n    absDeltaX = Math.abs(deltaX);\n    absDeltaY = Math.abs(deltaY);\n    // Calculate error intervals for both axis\n    errX = 2 * absDeltaY - absDeltaX;\n    errY = 2 * absDeltaX - absDeltaY;\n    // The line is X-axis dominant\n    if (absDeltaY <= absDeltaX) {\n        // Line is drawn left to right\n        if (deltaX >= 0) {\n            xWalker = x0;\n            yWalker = y0;\n            xDestination = x1;\n        }\n        // Line is drawn right to left (swap ends)\n        else {\n            xWalker = x1;\n            yWalker = y1;\n            xDestination = x0;\n        }\n        // Push first pixel\n        _pushTobresenhamLine(xWalker, yWalker);\n        // Rasterize the line\n        for (step = 0; xWalker < xDestination; step++) {\n            // move one step on x\n            xWalker = xWalker + 1;\n            // errX is smaller than 0\n            if (errX < 0) {\n                errX = errX + 2 * absDeltaY;\n                _pushTobresenhamLine(xWalker, yWalker);\n            }\n            // errX is larger than 0\n            else {\n                if ((deltaX < 0 && deltaY < 0) || (deltaX > 0 && deltaY > 0)) {\n                    yWalker = yWalker + 1;\n                } else {\n                    yWalker = yWalker - 1;\n                }\n                errX = errX + 2 * (absDeltaY - absDeltaX);\n                // push pnt that stays on x for the y+1 step\n                // so that the a 90deg step is created\n                _pushTobresenhamLine(xWalker - 1, yWalker);\n            }\n            _pushTobresenhamLine(xWalker, yWalker);\n        }\n    }\n    // The line is Y-axis dominant\n    else if (absDeltaY > absDeltaX) {\n        // Line is drawn bottom to top\n        if (deltaY >= 0) {\n            xWalker = x0;\n            yWalker = y0;\n            yDestination = y1;\n        } else {\n            // Line is drawn top to bottom\n            xWalker = x1;\n            yWalker = y1;\n            yDestination = y0;\n        }\n        _pushTobresenhamLine(xWalker, yWalker); // Draw first pixel\n        // Rasterize the line\n        for (step = 0; yWalker < yDestination; step++) {\n            // move y\n            yWalker = yWalker + 1;\n            if (errY <= 0) {\n                errY = errY + 2 * absDeltaX;\n                _pushTobresenhamLine(xWalker, yWalker);\n            } else {\n                if ((deltaX < 0 && deltaY < 0) || (deltaX > 0 && deltaY > 0)) {\n                    xWalker = xWalker + 1;\n                } else {\n                    xWalker = xWalker - 1;\n                }\n                errY = errY + 2 * (absDeltaX - absDeltaY);\n                _pushTobresenhamLine(xWalker, yWalker - 1);\n            }\n            _pushTobresenhamLine(xWalker, yWalker);\n        }\n    }\n    return pathArr;\n};\n","/* global window */\nimport React, { Component } from \"react\";\nimport { CellMeta, SelectionTarget } from \"./baseMapComponents\";\nimport { connect } from \"react-redux\";\nimport {\n    _proccesNetworkPnts,\n    _proccessAccessData,\n    _proccessGridData,\n    _postMapEditsToCityIO,\n    _proccessGridTextData,\n    _proccessBresenhamGrid,\n    setDirLightSettings,\n    _bresenhamLine,\n} from \"./baseMapUtils\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { TripsLayer } from \"@deck.gl/geo-layers\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport {\n    HeatmapLayer,\n    PathLayer,\n    GeoJsonLayer,\n    TextLayer,\n    ScatterplotLayer,\n} from \"deck.gl\";\nimport { LightingEffect, AmbientLight, _SunLight } from \"@deck.gl/core\";\nimport settings from \"../../settings/settings.json\";\nimport { listenToSlidersEvents } from \"../../redux/actions\";\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: [],\n            cityioData: null,\n            selectedType: null,\n            draggingWhileEditing: false,\n            selectedCellsState: null,\n            selectedNetState: null,\n            pickingRadius: 40,\n            viewState: settings.map.initialViewState,\n            networkFirstPoint: null,\n            networkEdge: [],\n            networkLayer: [],\n        };\n        this.animationFrame = null;\n        this.timeZoneOffset = setDirLightSettings(\n            this.props.cityioData.GEOGRID.properties.header\n        );\n        this.dirLightSettings = {\n            timestamp: Date.UTC(2019, 7, 1, 11 + this.timeZoneOffset),\n            color: [255, 255, 255],\n            intensity: 1.0,\n            _shadow: true,\n        };\n    }\n\n    componentWillUnmount() {\n        if (this.animationFrame) {\n            window.cancelAnimationFrame(this.animationFrame);\n        }\n    }\n\n    componentDidMount() {\n        const { cityioData } = this.props;\n        // fix deck view rotate\n        this._rightClickViewRotate();\n        // setup sun effects\n        this._setupEffects();\n        // zoom map on CS table location\n        this._setViewStateToTableHeader();\n        this.setState({\n            networkPnts: _proccesNetworkPnts(cityioData),\n            gridTextData: _proccessGridTextData(cityioData),\n            bresenhamGrid: _proccessBresenhamGrid(cityioData),\n            networkLayer: cityioData.GEONETWORK,\n        });\n\n        // start ainmation/sim/roate\n        this._animate();\n    }\n\n    /**\n     * handels events as they derived from redux props\n     */\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.menu !== prevState.menu) {\n            this.setState({ menu: this.props.menu });\n        }\n\n        const { cityioData } = this.props;\n        if (prevState.cityioData !== cityioData) {\n            // get cityio data from props\n\n            this.setState({\n                cityioData: cityioData,\n                GEOGRID: _proccessGridData(cityioData),\n            });\n\n            // ! workaround for preloading access layer data\n            if (cityioData.access) {\n                this.setState({ access: _proccessAccessData(cityioData) });\n            }\n        }\n\n        // toggle ABM animation\n        if (\n            !prevProps.menu.includes(\"ABM\") &&\n            this.props.menu.includes(\"ABM\")\n        ) {\n            this.setState({ animateABM: true });\n        } else if (\n            prevProps.menu.includes(\"ABM\") &&\n            !this.props.menu.includes(\"ABM\")\n        ) {\n            this.setState({ animateABM: false });\n        }\n\n        // toggle rotate animation\n        if (\n            !prevProps.menu.includes(\"ROTATE\") &&\n            this.props.menu.includes(\"ROTATE\")\n        ) {\n            this.setState({ animateCamera: true });\n        } else if (\n            prevProps.menu.includes(\"ROTATE\") &&\n            !this.props.menu.includes(\"ROTATE\")\n        ) {\n            this.setState({ animateCamera: false });\n        }\n\n        if (\n            !prevProps.menu.includes(\"SHADOWS\") &&\n            this.props.menu.includes(\"SHADOWS\")\n        ) {\n            this._effects[0].shadowColor = [0, 0, 0, 0.5];\n        }\n\n        if (\n            prevProps.menu.includes(\"SHADOWS\") &&\n            !this.props.menu.includes(\"SHADOWS\")\n        ) {\n            this._effects[0].shadowColor = [0, 0, 0, 0];\n        }\n\n        //  toggle edit mode and send to cityio\n        if (\n            prevProps.menu.includes(\"EDIT\") &&\n            !this.props.menu.includes(\"EDIT\")\n        ) {\n            // take props from grid and send\n            let dataProps = [];\n            for (let i = 0; i < this.state.GEOGRID.features.length; i++) {\n                dataProps[i] = this.state.GEOGRID.features[i].properties;\n            }\n            _postMapEditsToCityIO(\n                dataProps,\n                cityioData.tableName,\n                \"/GEOGRIDDATA\"\n            );\n\n            _postMapEditsToCityIO(\n                this.state.networkLayer,\n                cityioData.tableName,\n                \"/GEONETWORK\"\n            );\n        }\n\n        // toggle reset view mode\n        if (\n            !prevProps.menu.includes(\"RESET_VIEW\") &&\n            this.props.menu.includes(\"RESET_VIEW\")\n        ) {\n            this._setViewStateToTableHeader();\n        } else if (\n            prevProps.menu.includes(\"RESET_VIEW\") &&\n            !this.props.menu.includes(\"RESET_VIEW\")\n        ) {\n            this.setState({\n                viewState: {\n                    ...this.state.viewState,\n                    pitch: 45,\n                },\n            });\n        }\n    }\n\n    _onViewStateChange = ({ viewState }) => {\n        viewState.orthographic = this.props.menu.includes(\"RESET_VIEW\")\n            ? true\n            : false;\n\n        this.setState({ viewState });\n    };\n\n    /**\n     * resets the camera viewport\n     * to cityIO header data\n     * https://github.com/uber/deck.gl/blob/master/test/apps/viewport-transitions-flyTo/src/app.js\n     */\n    _setViewStateToTableHeader() {\n        const header = this.props.cityioData.GEOGRID.properties.header;\n\n        this.setState({\n            viewState: {\n                ...this.state.viewState,\n                longitude: header.longitude,\n                latitude: header.latitude,\n                zoom: 15,\n                pitch: 0,\n                bearing: 360 - header.rotation,\n                orthographic: true,\n            },\n        });\n    }\n\n    _setupEffects() {\n        const ambientLight = new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 0.85,\n        });\n        const dirLight = new _SunLight(this.dirLightSettings);\n        const lightingEffect = new LightingEffect({ ambientLight, dirLight });\n        lightingEffect.shadowColor = [0, 0, 0, 0.5];\n        this._effects = [lightingEffect];\n    }\n\n    _animate() {\n        if (this.state.animateCamera) {\n            let bearing = this.state.viewState.bearing\n                ? this.state.viewState.bearing\n                : 0;\n            bearing < 360 ? (bearing += 0.05) : (bearing = 0);\n            this.setState({\n                viewState: {\n                    ...this.state.viewState,\n                    bearing: bearing,\n                },\n            });\n        }\n\n        if (this.state.animateABM) {\n            const time = this.props.sliders.time[1];\n            const speed = this.props.sliders.speed;\n            const startHour = this.props.sliders.time[0];\n            const endHour = this.props.sliders.time[2];\n            let t = parseInt(time) + parseInt(speed);\n            if (time < startHour || time > endHour) {\n                t = startHour;\n            }\n            var currentDateMidnight = new Date();\n            currentDateMidnight.setHours(0, 0, 0, 0);\n            var date = new Date(currentDateMidnight.getTime() + t * 1000);\n            this._effects[0].directionalLights[0].timestamp = Date.UTC(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDay(),\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds()\n            );\n\n            this.props.listenToSlidersEvents({\n                ...this.props.sliders,\n                time: [\n                    this.props.sliders.time[0],\n                    t,\n                    this.props.sliders.time[2],\n                ],\n            });\n        }\n\n        // ! start the req animation frame\n        this.animationFrame = window.requestAnimationFrame(\n            this._animate.bind(this)\n        );\n    }\n\n    /**\n     * Description. fix deck issue\n     * with rotate right botton\n     */\n    _rightClickViewRotate() {\n        document\n            .getElementById(\"deckgl-wrapper\")\n            .addEventListener(\"contextmenu\", (evt) => evt.preventDefault());\n    }\n\n    /**\n     * Description. uses deck api to\n     * collect objects in a region\n     * @argument{object} e  picking event\n     */\n    _mulipleObjPicked = (e) => {\n        const dim = this.state.pickingRadius;\n        const x = e.x - dim / 2;\n        const y = e.y - dim / 2;\n        let mulipleObj = this.deckGL.pickObjects({\n            x: x,\n            y: y,\n            width: dim,\n            height: dim,\n        });\n        return mulipleObj;\n    };\n\n    /**\n     * Description. allow only to pick cells that are\n     *  not of CityScope TUI & that are interactable\n     * so to not overlap TUI activity\n     */\n    _handleGridcellEditing = (e) => {\n        const { selectedType } = this.props;\n        const { height, color, name } = selectedType;\n        const multiSelectedObj = this._mulipleObjPicked(e);\n        multiSelectedObj.forEach((selected) => {\n            const thisCellProps = selected.object.properties;\n            if (thisCellProps && thisCellProps.interactive === true) {\n                thisCellProps.old_height = thisCellProps.height;\n                thisCellProps.old_color = thisCellProps.color;\n                thisCellProps.color = color;\n                thisCellProps.height = height;\n                thisCellProps.name = name;\n            }\n        });\n        this.setState({\n            selectedCellsState: multiSelectedObj,\n        });\n    };\n\n    _handleNetworkHover = (pnt) => {\n        // paint the pnt\n        const { selectedType } = this.props;\n        // check if really a pnt\n        if (\n            pnt &&\n            pnt.object &&\n            pnt.object.properties &&\n            selectedType.name !== \"Clear network\"\n        ) {\n            const pntProps = pnt.object.properties;\n            pntProps.old_color = pntProps.color;\n            pntProps.color = selectedType.color;\n            pntProps.old_netWidth = pntProps.netWidth;\n            pntProps.netWidth = pntProps.netWidth * 2;\n            // dirty solution for animating selection\n            this.setState({\n                hoveredPnt: pnt.object,\n            });\n\n            // then back to org color\n            pntProps.color = pntProps.old_color;\n            pntProps.netWidth = pntProps.old_netWidth;\n\n            this.setState({\n                hoveredPnt: pnt.object,\n            });\n        }\n    };\n\n    _handleNetworkRemove = (path) => {\n        const selectedType = this.props.selectedType;\n        if (path.object && selectedType.name === \"Delete Path\") {\n            path = path.object;\n            this.state.networkLayer.forEach((item, index, object) => {\n                if (item.id === path.id) {\n                    object.splice(index, 1);\n                    let tmpObj = JSON.parse(JSON.stringify(object));\n                    this.setState({\n                        networkLayer: tmpObj,\n                    });\n                }\n            });\n        }\n    };\n\n    /**\n     *\n     * if we have the first pnt\n     * get the second point\n     * if on any of it's 4 immidate sides\n     * draw line\n     *\n     */\n    _handleNetworkCreate = (pnt) => {\n        // check if on network path  delete mode\n        const selectedType = this.props.selectedType;\n        // if we're not removing paths\n        if (selectedType.name !== \"Delete Path\") {\n            // if this is the first point\n            if (!this.state.networkFirstPoint) {\n                // make this the first point\n                this.setState({ networkFirstPoint: pnt });\n            } else {\n                const pickData = this.deckGL.pickObject({\n                    x: pnt.x,\n                    y: pnt.y,\n                });\n\n                if (\n                    pickData &&\n                    selectedType.class === \"networkClass\" &&\n                    selectedType.name !== \"Clear network\"\n                ) {\n                    const FP = this.state.networkFirstPoint.object.properties\n                        .gridPosition;\n                    const SP = pickData.object.properties.gridPosition;\n\n                    let lineObj = _bresenhamLine(\n                        FP[0],\n                        FP[1],\n                        SP[0],\n                        SP[1],\n                        this.state.bresenhamGrid\n                    );\n\n                    let tmpArr;\n\n                    tmpArr = Array.isArray(this.state.networkLayer)\n                        ? this.state.networkLayer\n                        : [];\n\n                    let bresenhamLine = {\n                        path: lineObj,\n                        id: tmpArr.length,\n                        selectedType: this.props.selectedType,\n                    };\n\n                    tmpArr.push(bresenhamLine);\n                    tmpArr = JSON.parse(JSON.stringify(tmpArr));\n                    this.setState({ networkLayer: tmpArr });\n                    // null the first pnt for new selection\n                    this.setState({ networkFirstPoint: null });\n                }\n            }\n        }\n    };\n\n    /**\n     * Description.\n     * draw target area around mouse\n     */\n    _renderSelectionTarget = () => {\n        if (this.props.menu.includes(\"EDIT\")) {\n            return (\n                this.props.selectedType && (\n                    <SelectionTarget\n                        mousePos={this.state.mousePos}\n                        selectedType={this.props.selectedType}\n                        divSize={this.state.pickingRadius}\n                        mouseDown={this.state.mouseDown}\n                    />\n                )\n            );\n        } else {\n            return (\n                this.state.hoveredObj && (\n                    <CellMeta\n                        mousePos={this.state.mousePos}\n                        hoveredObj={this.state.hoveredObj}\n                    />\n                )\n            );\n        }\n    };\n\n    _handleKeyUp = () => {\n        this.setState({ keyDownState: null });\n    };\n\n    _handleKeyDown = (e) => {\n        // avoid common clicks\n        this.setState({ keyDownState: e.nativeEvent.key });\n        if (e.nativeEvent.key === \"=\" && this.state.pickingRadius < 100) {\n            this.setState({ pickingRadius: this.state.pickingRadius + 5 });\n        } else if (e.nativeEvent.key === \"-\" && this.state.pickingRadius > 0) {\n            this.setState({ pickingRadius: this.state.pickingRadius - 5 });\n        }\n    };\n\n    /**\n     * remap line width\n     */\n    _remapValues = (value) => {\n        let remap =\n            value > 15 && value < 25 ? 3 : value < 15 && value > 10 ? 12 : 30;\n        return remap;\n    };\n\n    /**\n     * renders deck gl layers\n     */\n    _renderLayers() {\n        const zoomLevel = this.state.viewState.zoom;\n        const { cityioData } = this.props;\n        let layers = [];\n\n        if (this.props.menu.includes(\"TEXT\")) {\n            layers.push(\n                new TextLayer({\n                    id: \"gridText-layer\",\n                    data: this.state.gridTextData,\n                    getText: (d) => d.text,\n                    getPosition: (d) => d.coordinates,\n                    getColor: [255, 255, 255],\n                    getSize: 10,\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"GRID\")) {\n            layers.push(\n                new GeoJsonLayer({\n                    id: \"GRID\",\n                    // loads geogrid into visualization\n                    data: this.state.GEOGRID,\n                    visible: this.props.menu.includes(\"GRID\") ? true : false,\n                    pickable:\n                        this.props.selectedType.class === \"networkClass\"\n                            ? false\n                            : true,\n                    extruded: true,\n                    lineWidthScale: 1,\n                    lineWidthMinPixels: 2,\n                    getElevation: (d) => d.properties.height,\n                    getFillColor: (d) => d.properties.color,\n                    onClick: (event) => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleGridcellEditing(event);\n                    },\n                    onHover: (e) => {\n                        if (e.object) {\n                            this.setState({ hoveredObj: e });\n                        }\n                    },\n\n                    onDrag: (event) => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleGridcellEditing(event);\n                    },\n                    onDragStart: () => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        ) {\n                            this.setState({ draggingWhileEditing: true });\n                        }\n                    },\n                    onDragEnd: () => {\n                        this.setState({ draggingWhileEditing: false });\n                    },\n                    updateTriggers: {\n                        getFillColor: this.state.selectedCellsState,\n                        getElevation: this.state.selectedCellsState,\n                    },\n                    transitions: {\n                        getFillColor: 500,\n                        getElevation: 500,\n                    },\n                })\n            );\n        }\n\n        if (\n            this.props.menu.includes(\"NETWORK\") &&\n            this.state.networkPnts &&\n            this.state.networkPnts.features\n        ) {\n            if (this.props.menu.includes(\"EDIT\")) {\n                layers.push(\n                    new ScatterplotLayer({\n                        id: \"NETWORK\",\n                        data: this.state.networkPnts.features,\n                        pickable: true,\n                        opacity: 1,\n                        filled: true,\n                        radiusScale: 1,\n                        radiusMinPixels: 1,\n                        radiusMaxPixels: 100,\n                        getPosition: (d) => d.geometry.coordinates,\n                        getFillColor: (d) => d.properties.color,\n                        getRadius: (d) => d.properties.netWidth,\n\n                        onHover: (e) => {\n                            if (\n                                this.props.menu.includes(\"EDIT\") &&\n                                this.state.keyDownState !== \"Shift\"\n                            ) {\n                                this._handleNetworkHover(e);\n                            }\n                        },\n                        onClick: (e) => {\n                            if (\n                                this.props.menu.includes(\"EDIT\") &&\n                                this.state.keyDownState !== \"Shift\"\n                            ) {\n                                this._handleNetworkCreate(e);\n                            }\n                        },\n\n                        updateTriggers: {\n                            getFillColor: this.state.hoveredPnt,\n                            getRadius: this.state.hoveredPnt,\n                        },\n                        transitions: {\n                            getFillColor: 100,\n                            getRadius: 300,\n                        },\n                    })\n                );\n            }\n\n            layers.push(\n                new PathLayer({\n                    pickable: true,\n                    id: \"NETWORK_PATHS\",\n                    data: this.state.networkLayer,\n                    widthScale: 1,\n                    widthMinPixels: 5,\n                    getPath: (d) => d.path,\n                    getColor: (d) => d.selectedType.color,\n                    getWidth: (d) => d.selectedType.width,\n                    onClick: (e) => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        ) {\n                            this._handleNetworkRemove(e);\n                        }\n                    },\n                    updateTriggers: {\n                        getPath: this.state.networkLayer,\n                    },\n                    transitions: {\n                        getPath: 500,\n                    },\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"ACCESS\")) {\n            layers.push(\n                new HeatmapLayer({\n                    id: \"ACCESS\",\n                    visible: this.props.menu.includes(\"ACCESS\"),\n                    colorRange: settings.map.layers.heatmap.colors,\n                    radiusPixels: 200,\n                    opacity: 0.25,\n                    data: this.state.access,\n                    getPosition: (d) => d.coordinates,\n                    getWeight: (d) => d.values[this.props.accessToggle],\n                    updateTriggers: {\n                        getWeight: [this.props.accessToggle],\n                    },\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"ABM\")) {\n            layers.push(\n                new TripsLayer({\n                    id: \"ABM\",\n                    visible: this.props.menu.includes(\"ABM\") ? true : false,\n                    data: cityioData.ABM,\n                    getPath: (d) => d.path,\n                    getTimestamps: (d) => d.timestamps,\n                    getColor: (d) => {\n                        //switch between modes or types of users\n                        switch (d.mode[0]) {\n                            case 0:\n                                return [228, 26, 28];\n                            case 1:\n                                return [55, 126, 184];\n                            case 2:\n                                return [77, 175, 74];\n                            case 3:\n                                return [255, 255, 51];\n                            case 4:\n                                return [152, 78, 163];\n                            case 5:\n                                return [255, 127, 0];\n                            default:\n                                return [255, 255, 255];\n                        }\n                    },\n                    getWidth: 1,\n                    widthScale: this._remapValues(zoomLevel),\n                    opacity: 0.8,\n                    rounded: true,\n                    trailLength: 500,\n                    currentTime: this.props.sliders.time[1],\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"PATHS\")) {\n            layers.push(\n                new PathLayer({\n                    id: \"PATHS\",\n                    visible: this.props.menu.includes(\"PATHS\") ? true : false,\n                    _shadow: false,\n                    data: cityioData.ABM,\n                    getPath: (d) => {\n                        const noisePath =\n                            Math.random() < 0.5\n                                ? Math.random() * 0.00005\n                                : Math.random() * -0.00005;\n                        for (let i in d.path) {\n                            d.path[i][0] = d.path[i][0] + noisePath;\n                            d.path[i][1] = d.path[i][1] + noisePath;\n                            d.path[i][2] = d.mode[0] * 2;\n                        }\n                        return d.path;\n                    },\n                    getColor: (d) => {\n                        switch (d.mode[0]) {\n                            case 0:\n                                return [228, 26, 28];\n                            case 1:\n                                return [55, 126, 184];\n                            case 2:\n                                return [77, 175, 74];\n                            case 3:\n                                return [255, 255, 51];\n                            case 4:\n                                return [152, 78, 163];\n                            case 5:\n                                return [255, 127, 0];\n                            default:\n                                return [255, 255, 255];\n                        }\n                    },\n                    opacity: 0.2,\n                    getWidth: 1.5,\n                })\n            );\n        }\n        return layers;\n    }\n\n    render() {\n        return (\n            <div\n                className=\"baseMap\"\n                onKeyDown={this._handleKeyDown}\n                onKeyUp={this._handleKeyUp}\n                onMouseMove={(e) =>\n                    this.setState({\n                        mousePos: e.nativeEvent,\n                    })\n                }\n                onMouseUp={() =>\n                    this.setState({\n                        mouseDown: false,\n                    })\n                }\n                onMouseDown={() =>\n                    this.setState({\n                        mouseDown: true,\n                    })\n                }\n            >\n                {/* renders the slection box div */}\n\n                <React.Fragment>{this._renderSelectionTarget()}</React.Fragment>\n\n                <DeckGL\n                    // sets the cursor on paint\n                    getCursor={() =>\n                        this.props.menu.includes(\"EDIT\") ? \"none\" : \"all-scroll\"\n                    }\n                    ref={(ref) => {\n                        // save a reference to the Deck instance\n                        this.deckGL = ref && ref.deck;\n                    }}\n                    viewState={this.state.viewState}\n                    onViewStateChange={this._onViewStateChange}\n                    layers={this._renderLayers()}\n                    effects={this._effects}\n                    controller={{\n                        touchZoom: true,\n                        touchRotate: true,\n                        dragPan: !this.state.draggingWhileEditing,\n                        dragRotate: !this.state.draggingWhileEditing,\n                        keyboard: false,\n                    }}\n                >\n                    <StaticMap\n                        asyncRender={true}\n                        dragRotate={true}\n                        reuseMaps={true}\n                        mapboxApiAccessToken={\n                            process.env.REACT_APP_MAPBOX_TOKEN\n                        }\n                        mapStyle={settings.map.mapStyle.blue}\n                        preventStyleDiffing={true}\n                    />\n                </DeckGL>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cityioData: state.CITYIO,\n        sliders: state.SLIDERS,\n        menu: state.MENU,\n        accessToggle: state.ACCESS_TOGGLE,\n    };\n};\n\nconst mapDispatchToProps = {\n    listenToSlidersEvents: listenToSlidersEvents,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n","import { Matrix3d, RectPoints, Vector } from \"./layer\";\nconst { solve } = require(\"numeric\");\n\nexport const round = (num: number, precision: number) => {\n    var factor = Math.pow(10, precision);\n    var tempNumber = num * factor;\n    var roundedTempNumber = Math.round(tempNumber);\n    return roundedTempNumber / factor;\n};\n\n// tslint:disable-next-line:no-any\nexport const range = (num: number) =>\n    (Array as any)(num)\n        .fill()\n        .map((_: any, i: any) => i * i);\n\nexport const transformPointsToMatrix = (\n    sourcePoints: RectPoints,\n    targetPoints: RectPoints\n): Matrix3d => {\n    const a: number[][] = [];\n    const b: number[] = [];\n\n    for (let i = 0, n = sourcePoints.length; i < n; ++i) {\n        const [fromX, fromY] = sourcePoints[i];\n        const [toX, toY] = targetPoints[i];\n\n        a.push(\n            [fromX, fromY, 1, 0, 0, 0, -fromX * toX, -fromY * toX],\n            [0, 0, 0, fromX, fromY, 1, -fromX * toY, -fromY * toY]\n        );\n\n        b.push(toX, toY);\n    }\n\n    const h = solve(a, b, true);\n\n    return [\n        h[0],\n        h[3],\n        0,\n        h[6],\n        h[1],\n        h[4],\n        0,\n        h[7],\n        0,\n        0,\n        1,\n        0,\n        h[2],\n        h[5],\n        0,\n        1\n    ].map(num => round(num, 10)) as Matrix3d;\n};\n\nexport const matrixToTransform = (matrix: Matrix3d) =>\n    `matrix3d(${matrix.join(\", \")})`;\n\nexport const vectorToTransform = (vector: Vector) =>\n    `translate(${vector[0]}px, ${vector[1]}px)`;\n","import * as React from \"react\";\nimport { Anchor, Vector } from \"./layer\";\nimport { vectorToTransform } from \"./util\";\n\nconst anchorSize = 30;\nconst halfAnchor = anchorSize / 2;\n\nconst styles = {\n    container: {\n        width: anchorSize,\n        height: anchorSize,\n        borderRadius: \"50%\",\n        position: \"absolute\" as \"absolute\",\n        border: \"4px solid white\",\n        cursor: \"move\"\n    },\n    \"top-left\": {\n        left: -halfAnchor,\n        top: -halfAnchor\n    },\n    \"bottom-left\": {\n        left: -halfAnchor,\n        bottom: -halfAnchor\n    },\n    \"top-right\": {\n        top: -halfAnchor,\n        right: -halfAnchor\n    },\n    \"bottom-right\": {\n        bottom: -halfAnchor,\n        right: -halfAnchor\n    }\n};\n\nexport interface Props {\n    position: Anchor;\n    onMouseEnter?: (position: Anchor) => void;\n    // tslint:disable-next-line:no-any\n    onMouseDown: (evt: any, position: Anchor) => void;\n    onMouseUp: (position: Anchor) => void;\n    translation: Vector;\n    style?: React.CSSProperties;\n    className?: string;\n}\n\nexport const AnchorComponent: React.StatelessComponent<Props> = ({\n    position,\n    translation,\n    onMouseEnter,\n    onMouseDown,\n    onMouseUp,\n    className = \"\",\n    style = {}\n}) => (\n    <div\n        onMouseEnter={() => onMouseEnter && onMouseEnter(position)}\n        onMouseDown={evt => onMouseDown(evt, position)}\n        onMouseUp={() => onMouseUp(position)}\n        className={className}\n        style={{\n            ...styles.container,\n            ...styles[position],\n            ...style,\n            transform: vectorToTransform(translation)\n        }}\n    />\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n        position: \"fixed\",\n        top: \"50vh\",\n        zIndex: 1000\n    }\n}));\n\nexport default function DeleteLocalStorage() {\n    const classes = useStyles();\n\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\">\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<DeleteIcon />}\n            >\n                Reset Projection Mapping\n            </Button>\n        </Grid>\n    );\n}\n","import * as React from \"react\";\nimport { AnchorComponent } from \"./anchor\";\nimport {\n    matrixToTransform,\n    transformPointsToMatrix,\n    vectorToTransform,\n} from \"./util\";\n\nimport DeleteLocalStorage from \"./deleteLocalStorage\";\n\n// Component interfaces\nexport interface Props {\n    style?: React.CSSProperties;\n    className?: string;\n    isEditMode?: boolean;\n    x?: number;\n    y?: number;\n    anchorStyle?: React.CSSProperties;\n    anchorClassName?: string;\n}\n\nexport interface Context {\n    isEditMode: boolean;\n}\n\nexport interface State {\n    matrix: Matrix3d;\n    translateDelta: { [key: string]: Vector };\n    sourcePoints?: RectPoints;\n    transformOrigin: Vector;\n    containerTranslate: Vector;\n}\n\nconst styles = {\n    container: {\n        position: \"relative\" as \"relative\",\n    },\n};\n\n// Sorted\nexport type Anchor = \"top-left\" | \"top-right\" | \"bottom-right\" | \"bottom-left\";\nconst anchors: Anchor[] = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-right\",\n    \"bottom-left\",\n];\n\n// 4x4 matrix\nexport type Matrix3d = [\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number\n];\n\n// top-left, top-right, bottom-right, bottom-left\nexport type RectPoints = [Vector, Vector, Vector, Vector];\n\nexport type Vector = [number, number]; // [x, y]\n\nconst defaultMatrix: Matrix3d = [\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1, // second and third for x and y position of element\n];\n\nconst _setDeltaVal = () => {\n    let deltaInitVals: any = {};\n    anchors.forEach((e) => {\n        deltaInitVals[e] = [0, 0];\n    });\n    return deltaInitVals;\n};\n\nexport class Layer extends React.Component<Props, State> {\n    container: HTMLElement | null;\n    layerTranslateDelta: Vector | undefined;\n    anchorTranslateDelta: Vector | undefined;\n    isAnchorDragging = false;\n    targetPoints: RectPoints;\n    anchorMoving: Anchor | undefined;\n    state: State = {\n        matrix: defaultMatrix,\n        translateDelta: _setDeltaVal(),\n        sourcePoints: undefined,\n        transformOrigin: [0, 0],\n        containerTranslate: [this.props.x || 0, this.props.y || 0],\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"mousemove\", this.onAnchorMouseMove);\n        window.addEventListener(\"mousemove\", this.onMouseMove);\n        if (this.container) {\n            const { width, height } = this.container.getBoundingClientRect();\n            const sourcePoints = [\n                [0, 0],\n                [width, 0],\n                [width, height],\n                [0, height],\n            ] as RectPoints;\n\n            this.targetPoints = [...sourcePoints] as RectPoints;\n            this.setState({ sourcePoints });\n        }\n    }\n    componentDidUpdate(prevProps: any, prevState: State) {\n        // if entered keystone mode\n        if (!prevProps.isEditMode && this.props.isEditMode) {\n            // if found prev. keystone data\n            if (localStorage.getItem(\"projMap\")) {\n                console.log(\"loading prev. projMap...\");\n                let ls: any = localStorage.getItem(\"projMap\");\n                this.setState(JSON.parse(ls));\n            }\n            // if left keystone mode\n        } else if (prevProps.isEditMode && !this.props.isEditMode) {\n            console.log(\"saving edited projMap...\");\n            // save whatever keystone was in state\n            localStorage.setItem(\"projMap\", JSON.stringify(prevState));\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mousemove\", this.onAnchorMouseMove);\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\n    }\n\n    onAnchorMouseDown = (evt: any, position: any) => {\n        evt.stopPropagation();\n        this.anchorTranslateDelta = [\n            evt.pageX - this.state.translateDelta[position][0],\n            evt.pageY - this.state.translateDelta[position][1],\n        ];\n\n        this.anchorMoving = position;\n    };\n\n    onAnchorMouseMove = (evt: any) => {\n        if (\n            !this.anchorTranslateDelta ||\n            !this.state.sourcePoints ||\n            !this.anchorMoving\n        ) {\n            return;\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n        const vectorIndexToModify = anchors.indexOf(this.anchorMoving);\n\n        const deltaX = evt.pageX - this.anchorTranslateDelta[0];\n        const deltaY = evt.pageY - this.anchorTranslateDelta[1];\n\n        this.targetPoints[vectorIndexToModify] = [\n            this.state.sourcePoints[vectorIndexToModify][0] + deltaX,\n            this.state.sourcePoints[vectorIndexToModify][1] + deltaY,\n        ];\n\n        this.setState({\n            matrix: transformPointsToMatrix(\n                this.state.sourcePoints,\n                this.targetPoints!\n            ),\n            translateDelta: {\n                ...this.state.translateDelta,\n                [this.anchorMoving]: [deltaX, deltaY],\n            },\n        });\n    };\n\n    onAnchorMouseUp = (position: any) => {\n        this.anchorTranslateDelta = undefined;\n        this.anchorMoving = undefined;\n    };\n\n    onMouseUp = () => {\n        this.layerTranslateDelta = undefined;\n    };\n\n    onMouseMove = (evt: any) => {\n        if (!this.layerTranslateDelta || !this.props.isEditMode) {\n            return;\n        }\n\n        const newVector: Vector = [\n            evt.pageX - this.layerTranslateDelta[0],\n            evt.pageY - this.layerTranslateDelta[1],\n        ];\n\n        this.setState({\n            containerTranslate: newVector,\n        });\n    };\n\n    onMouseDown = (evt: any) => {\n        const { containerTranslate } = this.state;\n        this.layerTranslateDelta = [\n            evt.pageX - containerTranslate[0],\n            evt.pageY - containerTranslate[1],\n        ];\n    };\n\n    _clearLocalStraoge = () => {\n        if (localStorage.getItem(\"projMap\")) {\n            localStorage.removeItem(\"projMap\");\n        }\n        window.location.reload();\n    };\n\n    render() {\n        const {\n            style,\n            isEditMode,\n            className,\n            anchorStyle,\n            anchorClassName,\n        } = this.props;\n        const {\n            translateDelta,\n            matrix,\n            containerTranslate,\n            transformOrigin,\n        } = this.state;\n\n        return (\n            <React.Fragment>\n                {isEditMode && (\n                    <div onClick={() => this._clearLocalStraoge()}>\n                        <DeleteLocalStorage />\n                    </div>\n                )}\n\n                <div\n                    onMouseDown={this.onMouseDown}\n                    onMouseUp={this.onMouseUp}\n                    style={{\n                        cursor: isEditMode ? \"all-scroll\" : \"inherit\",\n                        position: \"relative\",\n                        display: \"inline-block\",\n                        transform: vectorToTransform(containerTranslate),\n                    }}\n                >\n                    <div\n                        ref={(ref) => {\n                            this.container = ref;\n                        }}\n                        style={{\n                            ...styles.container,\n                            ...style,\n                            pointerEvents: isEditMode ? \"none\" : \"all\",\n                            transform: matrixToTransform(matrix),\n                            transformOrigin: `${transformOrigin[0]}px ${transformOrigin[1]}px 0px`,\n                        }}\n                        className={className}\n                    >\n                        {this.props.children}\n                    </div>\n                    {isEditMode && (\n                        <div>\n                            {anchors.map((anchor, index) => (\n                                <AnchorComponent\n                                    style={anchorStyle}\n                                    className={anchorClassName}\n                                    key={anchor}\n                                    translation={translateDelta[anchor]}\n                                    position={anchor}\n                                    onMouseDown={this.onAnchorMouseDown}\n                                    onMouseUp={this.onAnchorMouseUp}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport MAP from \"./baseMap\";\nimport { connect } from \"react-redux\";\nimport { Layer } from \"../prjMap/layer\";\n\nclass MapContainer extends Component {\n    _checkKeystone = () => {\n        return this.props.menu.includes(\"KS\") ? true : false;\n    };\n\n    render() {\n        return (\n            <div\n                style={{\n                    background: \"black\",\n                    height: \"100vh\",\n                    width: \"100vw\",\n                    maxWidth: \"100%\",\n                    overflow: \"hidden\"\n                }}\n            >\n                <Layer\n                    className=\"mapLayer\"\n                    style={{\n                        height: \"100vh\",\n                        width: \"100vw\"\n                    }}\n                    isEditMode={this._checkKeystone()}\n                >\n                    <MAP\n                        menu={this.props.menu}\n                        selectedType={this.props.selectedType}\n                    />\n                </Layer>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        menu: state.MENU,\n        selectedType: state.SELECTED_TYPE\n    };\n};\n\nexport default connect(mapStateToProps, null)(MapContainer);\n","import React, { Component } from \"react\";\nimport { CircularGridLines, RadarChart } from \"react-vis\";\nimport \"../../../../node_modules/react-vis/dist/style.css\";\nimport \"./Radar.css\";\n\n/**\n * \n * \n *  \"domain\": [\n            { \"name\": \"amazing city\", \"domain\": [0, 1] },\n            { \"name\": \"validated innovation\", \"domain\": [0, 1] },\n            { \"name\": \"predicted happiness\", \"domain\": [0, 1] },\n            { \"name\": \"wow mix-use\", \"domain\": [0, 1] },\n            { \"name\": \"ok buildings\", \"domain\": [0, 1] },\n            { \"name\": \"fun crime rates\", \"domain\": [0, 1] },\n            { \"name\": \"success urbanism\", \"domain\": [0, 1] },\n            { \"name\": \"happy AI\", \"domain\": [0, 1] },\n            { \"name\": \"free parking\", \"domain\": [0, 1] },\n            { \"name\": \"deep chainy\", \"domain\": [0, 1] },\n            { \"name\": \"failed urbanism\", \"domain\": [0, 1] },\n            { \"name\": \"Data for free\", \"domain\": [0, 1] },\n            { \"name\": \"vapor energy\", \"domain\": [0, 1] },\n            { \"name\": \"deep chainy\", \"domain\": [0, 1] }\n        ],\n */\nclass Radar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            domains: [],\n            radarData: [],\n        };\n        this.radarSize = 350;\n\n        this.colorRange = [\"#fc03ec\", \"#79C7E3\"];\n    }\n\n    generateData() {\n        const indicators = this.props.cityioData.indicators;\n        let radarData = {};\n        let domains = [];\n        for (let i = 0; i < indicators.length; i++) {\n            if (indicators[i].viz_type === \"radar\") {\n                radarData[indicators[i].name] = indicators[i].value;\n                indicators[i].domain = [0, 1];\n                domains.push(indicators[i]);\n            }\n        }\n        this.setState({ radarData: [radarData], domains: domains });\n    }\n\n    componentDidMount() {\n        console.log(\"...init radar\");\n        this.setState({ indicators: this.props.indicators });\n        this.generateData();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.cityioData.indicators !== this.props.cityioData.indicators\n        ) {\n            this.setState({ indicators: this.props.indicators });\n            console.log(\"new radar data..\");\n            this.generateData();\n        }\n    }\n\n    render() {\n        if (this.props.cityioData.indicators) {\n            return (\n                <div>\n                    <RadarChart\n                        className=\"Radar blur\"\n                        animation\n                        data={this.state.radarData}\n                        domains={this.state.domains}\n                        colorRange={this.colorRange}\n                        style={{\n                            polygons: {\n                                fillOpacity: 0.2,\n                                strokeWidth: 2,\n                            },\n                            axes: {\n                                text: {\n                                    opacity: 0,\n                                    fontWeight: 700,\n                                    fill: \"white\",\n                                },\n                                strokeWidth: 0,\n                            },\n                            labels: {\n                                textAnchor: \"middle\",\n                                fontSize: 8,\n                                fontWeight: \"600\",\n                                fill: \"white\",\n                            },\n                        }}\n                        margin={{\n                            left: this.radarSize / 6,\n                            top: this.radarSize / 6,\n                            bottom: this.radarSize / 6,\n                            right: this.radarSize / 6,\n                        }}\n                        width={this.radarSize}\n                        height={this.radarSize}\n                    >\n                        <CircularGridLines\n                            style={{\n                                fill: \"white\",\n                                fillOpacity: 0.1,\n                                backgroundColor: \"#fff\",\n                                opacity: 0.5,\n                                stroke: \"white\",\n                                width: 0.1,\n                            }}\n                            tickValues={[...new Array(11)].map(\n                                (v, i) => i / 10 - 1\n                            )}\n                        />\n                    </RadarChart>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nexport default Radar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& > *\": {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst downloadTxtFile = (props) => {\n    let data = JSON.stringify(props);\n    const element = document.createElement(\"a\");\n    const file = new Blob([data], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = \"data.json\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n};\n\nexport default function DownloadRawData(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Button\n                onClick={() => {\n                    downloadTxtFile(props);\n                }}\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<SaveIcon />}\n            >\n                {props.title}\n            </Button>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport {\n    FlexibleWidthXYPlot,\n    XAxis,\n    YAxis,\n    VerticalBarSeries,\n} from \"react-vis\";\nimport \"../../../../node_modules/react-vis/dist/style.css\";\nimport DownloadRawData from \"../DownloadRawData/DownloadRawData\";\n\nclass Radar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            barChartData: null,\n        };\n        this.colorRange = [\"#fc03ec\", \"#79C7E3\"];\n    }\n\n    componentDidMount() {\n        console.log(\"....init BarChart\");\n        this.generateData();\n    }\n\n    /**\n   \n    [\n    { x: 2, y: 10 },\n    { x: 4, y: 5 },\n    { x: 12, y: 15 },\n    ]\n     */\n\n    generateData() {\n        const indicators = this.props.cityioData.indicators;\n\n        let dataArr = [];\n        for (let i = 0; i < indicators.length; i++) {\n            if (indicators[i].viz_type === \"bar\") {\n                dataArr.push({\n                    x: indicators[i].name,\n                    y: indicators[i].value,\n                });\n            }\n        }\n\n        this.setState({ barChartData: dataArr });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.cityioData.indicators !== this.props.cityioData.indicators\n        ) {\n            this.generateData();\n        }\n    }\n\n    render() {\n        if (this.state.barChartData) {\n            return (\n                <div>\n                    <FlexibleWidthXYPlot\n                        color={this.colorRange[1]}\n                        opacity={0.25}\n                        xType=\"ordinal\"\n                        width={350}\n                        height={250}\n                        stackBy=\"y\"\n                        yDomain={[0, 1]}\n                    >\n                        <XAxis\n                            style={{\n                                text: {\n                                    fill: \"#fff\",\n                                },\n                            }}\n                            tickLabelAngle={90}\n                        />\n                        <YAxis style={{ text: { fill: \"#fff\" } }} />\n                        <VerticalBarSeries data={this.state.barChartData} />\n                    </FlexibleWidthXYPlot>\n                    <DownloadRawData\n                        data={this.props.cityioData.indicators}\n                        title={\"radar & bars data\"}\n                    />\n                </div>\n            );\n        } else return null;\n    }\n}\n\nexport default Radar;\n","function componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function rgbToHex(r, g, b) {\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n","import React, { useState } from \"react\";\nimport { rgbToHex } from \"../../../services/utils\";\nimport { Treemap } from \"react-vis\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport DownloadRawData from \"../DownloadRawData/DownloadRawData\";\n\nexport default function AreaCalc(props) {\n    const [hoveredNode, setHoveredNode] = useState(false);\n\n    const calcArea = () => {\n        let gridProps = props.cityioData.GEOGRID.properties;\n        let cellSize = gridProps.header.cellSize;\n        let geoGridData = props.cityioData.GEOGRIDDATA;\n        let calcAreaObj = {};\n        geoGridData.forEach((gridCellData) => {\n            let typeName = gridCellData.name;\n            if (\n                // if this type is not null\n                gridCellData.name !== \"None\"\n            ) {\n                if (calcAreaObj.hasOwnProperty(typeName)) {\n                    calcAreaObj[typeName].count =\n                        calcAreaObj[typeName].count + 1;\n                    // avoid landuse with no height\n                    let height =\n                        gridCellData.height < 1 ? 1 : gridCellData.height;\n                    calcAreaObj[typeName].area =\n                        calcAreaObj[typeName].area + height * cellSize;\n                } else {\n                    calcAreaObj[typeName] = {};\n                    calcAreaObj[typeName].area = 0;\n                    calcAreaObj[typeName].count = 0;\n                    calcAreaObj[typeName].name = typeName;\n                    calcAreaObj[typeName].color = rgbToHex(\n                        gridCellData.color[0],\n                        gridCellData.color[1],\n                        gridCellData.color[2]\n                    );\n                }\n            }\n        });\n        //  convert to react-vis happy data format\n        let radialData = [];\n        for (const k in calcAreaObj) {\n            radialData.push(calcAreaObj[k]);\n        }\n\n        let data = {\n            children: radialData,\n            color: 1,\n        };\n        return data;\n    };\n\n    const data = calcArea();\n\n    return (\n        <List>\n            <ListItem>\n                {hoveredNode ? (\n                    <React.Fragment>\n                        <p>\n                            {hoveredNode.data.name}: {hoveredNode.data.area} sqm\n                        </p>\n                    </React.Fragment>\n                ) : (\n                    <p>Hover on chart...</p>\n                )}\n            </ListItem>\n            <ListItem>\n                <Treemap\n                    {...{\n                        onLeafMouseOver: (evt) => setHoveredNode(evt),\n                        onLeafMouseOut: () => setHoveredNode(false),\n\n                        colorType: \"literal\",\n                        animation: true,\n                        className: \"nested-tree-example\",\n                        data: data,\n                        height: 400,\n                        width: 400,\n                        getSize: (d) => d.area,\n                        getLabel: (d) => d.name + \" cells: \" + d.count,\n                    }}\n                />\n            </ListItem>\n\n            <DownloadRawData data={data} title={\"area data\"} />\n        </List>\n    );\n}\n","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Radar from \"./Radar/Radar\";\nimport BarChart from \"./BarChart/BarChart\";\nimport AreaCalc from \"./AreaCalc/AreaCalc\";\n\nfunction VisContainer(props) {\n    const useStyles = makeStyles({\n        root: {\n            display: \"flex\",\n            paddingLeft: 16,\n            paddingRight: 16,\n        },\n        paper: {\n            background: \"#1D1F21\",\n            width: 400,\n        },\n        list: {\n            color: \"#fFF\",\n        },\n        text: {\n            marginLeft: 16,\n            marginTop: 12,\n            flexGrow: 1,\n            fontSize: 20,\n            marginBottom: 12,\n            fontWeight: \"lighter\",\n        },\n\n        dividerColor: {\n            backgroundColor: \"#484848\",\n        },\n    });\n\n    const classes = useStyles();\n    const showRadar = props.menu && props.menu.includes(\"RADAR\");\n\n    return (\n        <React.Fragment>\n            {showRadar && (\n                <Drawer\n                    className={classes.root}\n                    variant=\"persistent\"\n                    anchor=\"right\"\n                    open={true}\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                >\n                    <List className={classes.list}>\n                        <ListItem>\n                            <ListItemText className={classes.text}>\n                                <h2>Urban Indicators</h2>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem>\n                            <Radar cityioData={props.cityioData} />\n                        </ListItem>\n\n                        <ListItem>\n                            <BarChart cityioData={props.cityioData} />\n                        </ListItem>\n\n                        <Divider\n                            variant=\"middle\"\n                            classes={{ root: classes.dividerColor }}\n                        />\n                        <ListItem>\n                            <AreaCalc cityioData={props.cityioData} />\n                        </ListItem>\n                    </List>\n                </Drawer>\n            )}\n        </React.Fragment>\n    );\n}\n\n// export default EditMenuMain;\n\nconst mapStateToProps = (state) => {\n    return {\n        cityioData: state.CITYIO,\n        menu: state.MENU,\n    };\n};\n\nexport default connect(mapStateToProps, null)(VisContainer);\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { useSelector } from \"react-redux\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: none;\n`;\n\nfunction LoadingSpinner() {\n    const loading = useSelector(state => state.LOADING);\n    return (\n        <div\n            style={{\n                position: \"fixed\",\n                bottom: 50,\n                right: 50,\n                zIndex: 1\n            }}\n        >\n            <PulseLoader\n                css={override}\n                size={20}\n                color=\"white\"\n                loading={loading}\n            />\n        </div>\n    );\n}\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CityIO from \"../../services/cityIO\";\nimport MenuContainer from \"../MenuContainer/MenuContainer\";\nimport MapContainer from \"../baseMap/baseMapContainer\";\nimport VisContainer from \"../visContainer/visContainer\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nfunction Screen(props) {\n    // wait for 'ready' flag when app is ready to start\n    const ready = useSelector((state) => state.READY);\n    // get the table name for cityIO comp\n    const { tableName } = props;\n\n    return (\n        <>\n            <CityIO tableName={tableName} />\n            {/* if ready, render the app*/}\n            {ready && (\n                <>\n                    <MenuContainer />\n                    <MapContainer />\n                    <VisContainer />\n                </>\n            )}\n            <LoadingSpinner />\n        </>\n    );\n}\n\nexport default Screen;\n","import Provider from \"./Provider\";\nimport \"./index.css\";\nimport configureStore from \"./redux/store\";\nimport Screen from \"./components/Screen\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport { newDataStyle } from \"./services/consoleStyle\";\n\nconst store = configureStore();\n\nconst MapRoute = () => {\n    let url = window.location.toString();\n    let pre = \"cityscope=\";\n    let cityscopePrjName = url.substring(url.indexOf(pre) + pre.length);\n\n    let table = null;\n    if (url.indexOf(pre) !== -1 && cityscopePrjName.length > 0) {\n        table = cityscopePrjName;\n    } else {\n        table = \"grasbrook\";\n    }\n    console.log(\"%c loading CityScope project: \" + table, newDataStyle);\n\n    return (\n        <Provider store={store}>\n            <StylesProvider injectFirst>\n                <Screen tableName={table} />\n            </StylesProvider>\n        </Provider>\n    );\n};\n\nclass App extends Component {\n    render() {\n        return <MapRoute />;\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\nconst render = () => {\n    return ReactDOM.render(<App />, root);\n};\n\nrender(App);\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        render(NextApp);\n    });\n}\n"],"sourceRoot":""}